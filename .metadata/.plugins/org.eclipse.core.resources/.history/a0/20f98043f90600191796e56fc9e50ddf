'''
Created on Dec 23, 2018

@author: Krishnakanth M
'''
class Node:
        def __init__(self, data,left=None, right=None):
            self.data = data;
            self.left=left;
            self.right=right;
        def insertLeft(self,data):
            newNode = self.Node(data,None,None);
            if self.Node is None:
                self.root = newNode;
            
            else:
                if self.root.left == None:
                    self.root.left=newNode;
                else:
                    newNode.left=self.root.left;
                    self.root.left=newNode;
        def insertRight(self,data):
            newNode = self.Node(data,None,None);
            if self.root is None:
                self.root = newNode;
            
            else:
                if self.root.right == None:
                    self.root.right=newNode;
                else:
                    newNode.right=self.root.right;
                    self.root.right=newNode;
class Tree:
    
    
    def __init__(self,Node=None):
        self.root=Node;

    
    def printTree(self):
        if self.root == None:
            return
        else:
            print(self.data)
            
            if self.root.left:
                self.root.left.printTree();
                
            if self.root.right:
                self.root.right.printTree();
    
    

bt = Tree();
ANode = Node('A',None,None)
BNode = Node('B',None,None)
CNode = Node('C',None,None)
DNode = Node('D',None,None)
ENode = Node('E',None,None)
FNode = Node('F',None,None)
GNode = Node('G',None,None)
bt.root = ANode;
ANode.insertLeft()
                
        
                
            
            